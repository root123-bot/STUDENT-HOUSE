!function (t, e) { if ("object" == typeof exports && "object" == typeof module) module.exports = e(); else if ("function" == typeof define && define.amd) define([], e); else { var n = e(); for (var r in n) ("object" == typeof exports ? exports : t)[r] = n[r] } }("undefined" != typeof self ? self : this, function () { return function (t) { function e(r) { if (n[r]) return n[r].exports; var i = n[r] = { i: r, l: !1, exports: {} }; return t[r].call(i.exports, i, i.exports, e), i.l = !0, i.exports } var n = {}; return e.m = t, e.c = n, e.d = function (t, n, r) { e.o(t, n) || Object.defineProperty(t, n, { configurable: !1, enumerable: !0, get: r }) }, e.n = function (t) { var n = t && t.__esModule ? function () { return t.default } : function () { return t }; return e.d(n, "a", n), n }, e.o = function (t, e) { return Object.prototype.hasOwnProperty.call(t, e) }, e.p = "", e(e.s = 205) }([function (t, e, n) { "use strict"; function r(t) { return "string" == typeof t || t instanceof String } function i(t) { return "number" == typeof t || t instanceof Number } function o(t) { return "boolean" == typeof t } function a(t) { return Array.isArray(t) } function s(t) { return "function" == typeof t } function u(t) { return null !== t && "object" == typeof t } function l(t) { return null === t } function c(t) { return void 0 === t } function f() { for (var t = {}, e = 0, n = arguments.length; e < n; e++) { var r = arguments[e]; if (r) for (var i in r) r.hasOwnProperty(i) && (t[i] = r[i]) } return t } function h(t, e, n) { switch (t.type) { case "ellipse": case "rect": t.x += e, t.y += n; break; case "line": t.x1 += e, t.x2 += e, t.y1 += n, t.y2 += n; break; case "polyline": for (var r = 0, i = t.points.length; r < i; r++)t.points[r].x += e, t.points[r].y += n } } function d(t, e) { return "font" === t ? "font" : e } t.exports = { isString: r, isNumber: i, isBoolean: o, isArray: a, isFunction: s, isObject: u, isNull: l, isUndefined: c, pack: f, fontStringify: d, offsetVector: h } }, function (t, e, n) { !function (n, r) { t.exports = e = r() }(0, function () { var t = t || function (t, e) { var n = Object.create || function () { function t() { } return function (e) { var n; return t.prototype = e, n = new t, t.prototype = null, n } }(), r = {}, i = r.lib = {}, o = i.Base = function () { return { extend: function (t) { var e = n(this); return t && e.mixIn(t), e.hasOwnProperty("init") && this.init !== e.init || (e.init = function () { e.$super.init.apply(this, arguments) }), e.init.prototype = e, e.$super = this, e }, create: function () { var t = this.extend(); return t.init.apply(t, arguments), t }, init: function () { }, mixIn: function (t) { for (var e in t) t.hasOwnProperty(e) && (this[e] = t[e]); t.hasOwnProperty("toString") && (this.toString = t.toString) }, clone: function () { return this.init.prototype.extend(this) } } }(), a = i.WordArray = o.extend({ init: function (t, e) { t = this.words = t || [], this.sigBytes = void 0 != e ? e : 4 * t.length }, toString: function (t) { return (t || u).stringify(this) }, concat: function (t) { var e = this.words, n = t.words, r = this.sigBytes, i = t.sigBytes; if (this.clamp(), r % 4) for (var o = 0; o < i; o++) { var a = n[o >>> 2] >>> 24 - o % 4 * 8 & 255; e[r + o >>> 2] |= a << 24 - (r + o) % 4 * 8 } else for (var o = 0; o < i; o += 4)e[r + o >>> 2] = n[o >>> 2]; return this.sigBytes += i, this }, clamp: function () { var e = this.words, n = this.sigBytes; e[n >>> 2] &= 4294967295 << 32 - n % 4 * 8, e.length = t.ceil(n / 4) }, clone: function () { var t = o.clone.call(this); return t.words = this.words.slice(0), t }, random: function (e) { for (var n, r = [], i = 0; i < e; i += 4) { var o = function (e) { var e = e, n = 987654321, r = 4294967295; return function () { n = 36969 * (65535 & n) + (n >> 16) & r, e = 18e3 * (65535 & e) + (e >> 16) & r; var i = (n << 16) + e & r; return i /= 4294967296, (i += .5) * (t.random() > .5 ? 1 : -1) } }(4294967296 * (n || t.random())); n = 987654071 * o(), r.push(4294967296 * o() | 0) } return new a.init(r, e) } }), s = r.enc = {}, u = s.Hex = { stringify: function (t) { for (var e = t.words, n = t.sigBytes, r = [], i = 0; i < n; i++) { var o = e[i >>> 2] >>> 24 - i % 4 * 8 & 255; r.push((o >>> 4).toString(16)), r.push((15 & o).toString(16)) } return r.join("") }, parse: function (t) { for (var e = t.length, n = [], r = 0; r < e; r += 2)n[r >>> 3] |= parseInt(t.substr(r, 2), 16) << 24 - r % 8 * 4; return new a.init(n, e / 2) } }, l = s.Latin1 = { stringify: function (t) { for (var e = t.words, n = t.sigBytes, r = [], i = 0; i < n; i++) { var o = e[i >>> 2] >>> 24 - i % 4 * 8 & 255; r.push(String.fromCharCode(o)) } return r.join("") }, parse: function (t) { for (var e = t.length, n = [], r = 0; r < e; r++)n[r >>> 2] |= (255 & t.charCodeAt(r)) << 24 - r % 4 * 8; return new a.init(n, e) } }, c = s.Utf8 = { stringify: function (t) { try { return decodeURIComponent(escape(l.stringify(t))) } catch (t) { throw new Error("Malformed UTF-8 data") } }, parse: function (t) { return l.parse(unescape(encodeURIComponent(t))) } }, f = i.BufferedBlockAlgorithm = o.extend({ reset: function () { this._data = new a.init, this._nDataBytes = 0 }, _append: function (t) { "string" == typeof t && (t = c.parse(t)), this._data.concat(t), this._nDataBytes += t.sigBytes }, _process: function (e) { var n = this._data, r = n.words, i = n.sigBytes, o = this.blockSize, s = 4 * o, u = i / s; u = e ? t.ceil(u) : t.max((0 | u) - this._minBufferSize, 0); var l = u * o, c = t.min(4 * l, i); if (l) { for (var f = 0; f < l; f += o)this._doProcessBlock(r, f); var h = r.splice(0, l); n.sigBytes -= c } return new a.init(h, c) }, clone: function () { var t = o.clone.call(this); return t._data = this._data.clone(), t }, _minBufferSize: 0 }), h = (i.Hasher = f.extend({ cfg: o.extend(), init: function (t) { this.cfg = this.cfg.extend(t), this.reset() }, reset: function () { f.reset.call(this), this._doReset() }, update: function (t) { return this._append(t), this._process(), this }, finalize: function (t) { return t && this._append(t), this._doFinalize() }, blockSize: 16, _createHelper: function (t) { return function (e, n) { return new t.init(n).finalize(e) } }, _createHmacHelper: function (t) { return function (e, n) { return new h.HMAC.init(t, n).finalize(e) } } }), r.algo = {}); return r }(Math); return t }) }, function (t, e) { var n = t.exports = { version: "2.6.5" }; "number" == typeof __e && (__e = n) }, function (t, e, n) { "use strict"; (function (t) { function r() { return o.TYPED_ARRAY_SUPPORT ? 2147483647 : 1073741823 } function i(t, e) { if (r() < e) throw new RangeError("Invalid typed array length"); return o.TYPED_ARRAY_SUPPORT ? (t = new Uint8Array(e), t.__proto__ = o.prototype) : (null === t && (t = new o(e)), t.length = e), t } function o(t, e, n) { if (!(o.TYPED_ARRAY_SUPPORT || this instanceof o)) return new o(t, e, n); if ("number" == typeof t) { if ("string" == typeof e) throw new Error("If encoding is specified then the first argument must be a string"); return l(this, t) } return a(this, t, e, n) } function a(t, e, n, r) { if ("number" == typeof e) throw new TypeError('"value" argument must not be a number'); return "undefined" != typeof ArrayBuffer && e instanceof ArrayBuffer ? h(t, e, n, r) : "string" == typeof e ? c(t, e, n) : d(t, e) } function s(t) { if ("number" != typeof t) throw new TypeError('"size" argument must be a number'); if (t < 0) throw new RangeError('"size" argument must not be negative') } function u(t, e, n, r) { return s(e), e <= 0 ? i(t, e) : void 0 !== n ? "string" == typeof r ? i(t, e).fill(n, r) : i(t, e).fill(n) : i(t, e) } function l(t, e) { if (s(e), t = i(t, e < 0 ? 0 : 0 | p(e)), !o.TYPED_ARRAY_SUPPORT) for (var n = 0; n < e; ++n)t[n] = 0; return t } function c(t, e, n) { if ("string" == typeof n && "" !== n || (n = "utf8"), !o.isEncoding(n)) throw new TypeError('"encoding" must be a valid string encoding'); var r = 0 | v(e, n); t = i(t, r); var a = t.write(e, n); return a !== r && (t = t.slice(0, a)), t } function f(t, e) { var n = e.length < 0 ? 0 : 0 | p(e.length); t = i(t, n); for (var r = 0; r < n; r += 1)t[r] = 255 & e[r]; return t } function h(t, e, n, r) { if (e.byteLength, n < 0 || e.byteLength < n) throw new RangeError("'offset' is out of bounds"); if (e.byteLength < n + (r || 0)) throw new RangeError("'length' is out of bounds"); return e = void 0 === n && void 0 === r ? new Uint8Array(e) : void 0 === r ? new Uint8Array(e, n) : new Uint8Array(e, n, r), o.TYPED_ARRAY_SUPPORT ? (t = e, t.__proto__ = o.prototype) : t = f(t, e), t } function d(t, e) { if (o.isBuffer(e)) { var n = 0 | p(e.length); return t = i(t, n), 0 === t.length ? t : (e.copy(t, 0, 0, n), t) } if (e) { if ("undefined" != typeof ArrayBuffer && e.buffer instanceof ArrayBuffer || "length" in e) return "number" != typeof e.length || X(e.length) ? i(t, 0) : f(t, e); if ("Buffer" === e.type && Q(e.data)) return f(t, e.data) } throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.") } function p(t) { if (t >= r()) throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + r().toString(16) + " bytes"); return 0 | t } function g(t) { return +t != t && (t = 0), o.alloc(+t) } function v(t, e) { if (o.isBuffer(t)) return t.length; if ("undefined" != typeof ArrayBuffer && "function" == typeof ArrayBuffer.isView && (ArrayBuffer.isView(t) || t instanceof ArrayBuffer)) return t.byteLength; "string" != typeof t && (t = "" + t); var n = t.length; if (0 === n) return 0; for (var r = !1; ;)switch (e) { case "ascii": case "latin1": case "binary": return n; case "utf8": case "utf-8": case void 0: return H(t).length; case "ucs2": case "ucs-2": case "utf16le": case "utf-16le": return 2 * n; case "hex": return n >>> 1; case "base64": return Z(t).length; default: if (r) return H(t).length; e = ("" + e).toLowerCase(), r = !0 } } function y(t, e, n) { var r = !1; if ((void 0 === e || e < 0) && (e = 0), e > this.length) return ""; if ((void 0 === n || n > this.length) && (n = this.length), n <= 0) return ""; if (n >>>= 0, e >>>= 0, n <= e) return ""; for (t || (t = "utf8"); ;)switch (t) { case "hex": return B(this, e, n); case "utf8": case "utf-8": return E(this, e, n); case "ascii": return T(this, e, n); case "latin1": case "binary": return I(this, e, n); case "base64": return P(this, e, n); case "ucs2": case "ucs-2": case "utf16le": case "utf-16le": return L(this, e, n); default: if (r) throw new TypeError("Unknown encoding: " + t); t = (t + "").toLowerCase(), r = !0 } } function b(t, e, n) { var r = t[e]; t[e] = t[n], t[n] = r } function m(t, e, n, r, i) { if (0 === t.length) return -1; if ("string" == typeof n ? (r = n, n = 0) : n > 2147483647 ? n = 2147483647 : n < -2147483648 && (n = -2147483648), n = +n, isNaN(n) && (n = i ? 0 : t.length - 1), n < 0 && (n = t.length + n), n >= t.length) { if (i) return -1; n = t.length - 1 } else if (n < 0) { if (!i) return -1; n = 0 } if ("string" == typeof e && (e = o.from(e, r)), o.isBuffer(e)) return 0 === e.length ? -1 : w(t, e, n, r, i); if ("number" == typeof e) return e &= 255, o.TYPED_ARRAY_SUPPORT && "function" == typeof Uint8Array.prototype.indexOf ? i ? Uint8Array.prototype.indexOf.call(t, e, n) : Uint8Array.prototype.lastIndexOf.call(t, e, n) : w(t, [e], n, r, i); throw new TypeError("val must be string, number or Buffer") } function w(t, e, n, r, i) { function o(t, e) { return 1 === a ? t[e] : t.readUInt16BE(e * a) } var a = 1, s = t.length, u = e.length; if (void 0 !== r && ("ucs2" === (r = String(r).toLowerCase()) || "ucs-2" === r || "utf16le" === r || "utf-16le" === r)) { if (t.length < 2 || e.length < 2) return -1; a = 2, s /= 2, u /= 2, n /= 2 } var l; if (i) { var c = -1; for (l = n; l < s; l++)if (o(t, l) === o(e, -1 === c ? 0 : l - c)) { if (-1 === c && (c = l), l - c + 1 === u) return c * a } else -1 !== c && (l -= l - c), c = -1 } else for (n + u > s && (n = s - u), l = n; l >= 0; l--) { for (var f = !0, h = 0; h < u; h++)if (o(t, l + h) !== o(e, h)) { f = !1; break } if (f) return l } return -1 } function x(t, e, n, r) { n = Number(n) || 0; var i = t.length - n; r ? (r = Number(r)) > i && (r = i) : r = i; var o = e.length; if (o % 2 != 0) throw new TypeError("Invalid hex string"); r > o / 2 && (r = o / 2); for (var a = 0; a < r; ++a) { var s = parseInt(e.substr(2 * a, 2), 16); if (isNaN(s)) return a; t[n + a] = s } return a } function _(t, e, n, r) { return Y(H(e, t.length - n), t, n, r) } function k(t, e, n, r) { return Y(V(e), t, n, r) } function S(t, e, n, r) { return k(t, e, n, r) } function C(t, e, n, r) { return Y(Z(e), t, n, r) } function A(t, e, n, r) { return Y(q(e, t.length - n), t, n, r) } function P(t, e, n) { return 0 === e && n === t.length ? K.fromByteArray(t) : K.fromByteArray(t.slice(e, n)) } function E(t, e, n) { n = Math.min(t.length, n); for (var r = [], i = e; i < n;) { var o = t[i], a = null, s = o > 239 ? 4 : o > 223 ? 3 : o > 191 ? 2 : 1; if (i + s <= n) { var u, l, c, f; switch (s) { case 1: o < 128 && (a = o); break; case 2: u = t[i + 1], 128 == (192 & u) && (f = (31 & o) << 6 | 63 & u) > 127 && (a = f); break; case 3: u = t[i + 1], l = t[i + 2], 128 == (192 & u) && 128 == (192 & l) && (f = (15 & o) << 12 | (63 & u) << 6 | 63 & l) > 2047 && (f < 55296 || f > 57343) && (a = f); break; case 4: u = t[i + 1], l = t[i + 2], c = t[i + 3], 128 == (192 & u) && 128 == (192 & l) && 128 == (192 & c) && (f = (15 & o) << 18 | (63 & u) << 12 | (63 & l) << 6 | 63 & c) > 65535 && f < 1114112 && (a = f) } } null === a ? (a = 65533, s = 1) : a > 65535 && (a -= 65536, r.push(a >>> 10 & 1023 | 55296), a = 56320 | 1023 & a), r.push(a), i += s } return O(r) } function O(t) { var e = t.length; if (e <= $) return String.fromCharCode.apply(String, t); for (var n = "", r = 0; r < e;)n += String.fromCharCode.apply(String, t.slice(r, r += $)); return n } function T(t, e, n) { var r = ""; n = Math.min(t.length, n); for (var i = e; i < n; ++i)r += String.fromCharCode(127 & t[i]); return r } function I(t, e, n) { var r = ""; n = Math.min(t.length, n); for (var i = e; i < n; ++i)r += String.fromCharCode(t[i]); return r } function B(t, e, n) { var r = t.length; (!e || e < 0) && (e = 0), (!n || n < 0 || n > r) && (n = r); for (var i = "", o = e; o < n; ++o)i += G(t[o]); return i } function L(t, e, n) { for (var r = t.slice(e, n), i = "", o = 0; o < r.length; o += 2)i += String.fromCharCode(r[o] + 256 * r[o + 1]); return i } function R(t, e, n) { if (t % 1 != 0 || t < 0) throw new RangeError("offset is not uint"); if (t + e > n) throw new RangeError("Trying to access beyond buffer length") } function M(t, e, n, r, i, a) { if (!o.isBuffer(t)) throw new TypeError('"buffer" argument must be a Buffer instance'); if (e > i || e < a) throw new RangeError('"value" argument is out of bounds'); if (n + r > t.length) throw new RangeError("Index out of range") } function F(t, e, n, r) { e < 0 && (e = 65535 + e + 1); for (var i = 0, o = Math.min(t.length - n, 2); i < o; ++i)t[n + i] = (e & 255 << 8 * (r ? i : 1 - i)) >>> 8 * (r ? i : 1 - i) } function D(t, e, n, r) { e < 0 && (e = 4294967295 + e + 1); for (var i = 0, o = Math.min(t.length - n, 4); i < o; ++i)t[n + i] = e >>> 8 * (r ? i : 3 - i) & 255 } function z(t, e, n, r, i, o) { if (n + r > t.length) throw new RangeError("Index out of range"); if (n < 0) throw new RangeError("Index out of range") } function N(t, e, n, r, i) { return i || z(t, e, n, 4, 3.4028234663852886e38, -3.4028234663852886e38), J.write(t, e, n, r, 23, 4), n + 4 } function W(t, e, n, r, i) { return i || z(t, e, n, 8, 1.7976931348623157e308, -1.7976931348623157e308), J.write(t, e, n, r, 52, 8), n + 8 } function U(t) { if (t = j(t).replace(tt, ""), t.length < 2) return ""; for (; t.length % 4 != 0;)t += "="; return t } function j(t) { return t.trim ? t.trim() : t.replace(/^\s+|\s+$/g, "") } function G(t) { return t < 16 ? "0" + t.toString(16) : t.toString(16) } function H(t, e) { e = e || 1 / 0; for (var n, r = t.length, i = null, o = [], a = 0; a < r; ++a) { if ((n = t.charCodeAt(a)) > 55295 && n < 57344) { if (!i) { if (n > 56319) { (e -= 3) > -1 && o.push(239, 191, 189); continue } if (a + 1 === r) { (e -= 3) > -1 && o.push(239, 191, 189); continue } i = n; continue } if (n < 56320) { (e -= 3) > -1 && o.push(239, 191, 189), i = n; continue } n = 65536 + (i - 55296 << 10 | n - 56320) } else i && (e -= 3) > -1 && o.push(239, 191, 189); if (i = null, n < 128) { if ((e -= 1) < 0) break; o.push(n) } else if (n < 2048) { if ((e -= 2) < 0) break; o.push(n >> 6 | 192, 63 & n | 128) } else if (n < 65536) { if ((e -= 3) < 0) break; o.push(n >> 12 | 224, n >> 6 & 63 | 128, 63 & n | 128) } else { if (!(n < 1114112)) throw new Error("Invalid code point"); if ((e -= 4) < 0) break; o.push(n >> 18 | 240, n >> 12 & 63 | 128, n >> 6 & 63 | 128, 63 & n | 128) } } return o } function V(t) { for (var e = [], n = 0; n < t.length; ++n)e.push(255 & t.charCodeAt(n)); return e } function q(t, e) { for (var n, r, i, o = [], a = 0; a < t.length && !((e -= 2) < 0); ++a)n = t.charCodeAt(a), r = n >> 8, i = n % 256, o.push(i), o.push(r); return o } function Z(t) { return K.toByteArray(U(t)) } function Y(t, e, n, r) { for (var i = 0; i < r && !(i + n >= e.length || i >= t.length); ++i)e[i + n] = t[i]; return i } function X(t) { return t !== t }/*!